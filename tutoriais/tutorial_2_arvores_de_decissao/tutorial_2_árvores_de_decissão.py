# -*- coding: utf-8 -*-
"""Tutorial 2 - Árvores de decissão.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tt6nfffGNw1WHa-MfQtrssPuRvy3xj3e

Decidir se o salário da pessoa é mais que 100k baseado na empresa, e o grau de instrução que a pessoa tem. Com poucos atributos é fácil e a gente conseguir entender uma decision tree. Porém na vida real são várias variáveis.
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn import tree

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/IA/bcc/tutorial_2_árvores_de_decisão/decision_tree.csv')

df.head()

"""dropar coluna *'salary'*, pois ela que o modelo vai gerar"""

input = df.drop('salary', axis='columns')
target = df['salary']

input

target

le_company = LabelEncoder()
le_job = LabelEncoder()
le_degree = LabelEncoder()

"""criar coluna *'company_n'*, *'job_n'*, *'degree_n'* e copiar celulas da coluna *'company'*, *'job'*, *'degree'* transfomadas em codigos, ou seja, cada atributo(string) para um número de código(int), identificando o atributo"""

input['company_n'] = le_company.fit_transform(input['company'])
input['job_n'] = le_job.fit_transform(input['job'])
input['degree_n'] = le_degree.fit_transform(input['degree'])

"""com isso, temos:<br>
- *company*<br>
 google = 2<br>
 facebook = 1<br>
 abc pharma =0<br>
- *job*<br>
sales executive = 2<br>
business manager = 0<br>
computer programmer = 1<br>
- *degree*<br>
bachelors = 0<br>
master = 1<br>
"""

input

"""dropar as colunas de onde foram criados identificadores"""

inputs_n = input.drop(['company', 'job', 'degree'], axis='columns')

inputs_n

model = tree.DecisionTreeClassifier()

model.fit(inputs_n, target)

"""para o exemplo: o colaboarador trabalha no google, é sales executive e te mestrado será que ele ganharia $100k por ano?"""

model. predict([[2, 2, 1]])

"""logo, de acordo com o modelo é não ganharia o valor mencionado"""